'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _chromaJs = require('chroma-js');

var _chromaJs2 = _interopRequireDefault(_chromaJs);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _DragLayer = require('./DragLayer');

var _DragLayer2 = _interopRequireDefault(_DragLayer);

var _HueDragSource = require('./HueDragSource');

var _HueDragSource2 = _interopRequireDefault(_HueDragSource);

var _SaturationValueDragSource = require('./SaturationValueDragSource');

var _SaturationValueDragSource2 = _interopRequireDefault(_SaturationValueDragSource);

var _reactDndHtml5Backend = require('react-dnd-html5-backend');

var _reactDndHtml5Backend2 = _interopRequireDefault(_reactDndHtml5Backend);

var _reactDnd = require('react-dnd');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var rootStyle = {
  position: 'relative'
};

var s4 = function s4() {
  return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
};

var randomId = function randomId() {
  return s4() + s4() + s4() + s4() + s4() + s4() + s4() + s4();
};

var ColorWheel = function (_React$PureComponent) {
  _inherits(ColorWheel, _React$PureComponent);

  function ColorWheel(props) {
    _classCallCheck(this, ColorWheel);

    var _this = _possibleConstructorReturn(this, (ColorWheel.__proto__ || Object.getPrototypeOf(ColorWheel)).call(this, props));

    _this.componentId = randomId();

    _this.state = {
      hue: 0,
      saturation: 0,
      value: 0
    };
    return _this;
  }

  _createClass(ColorWheel, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _state = this.state,
          hue = _state.hue,
          saturation = _state.saturation,
          value = _state.value;
      var _props = this.props,
          diameter = _props.diameter,
          wheelThickness = _props.wheelThickness;


      var radius = diameter ? diameter / 2 : 125;
      var thickness = wheelThickness ? wheelThickness : radius / 5;

      return _react2.default.createElement(
        'div',
        { style: rootStyle, id: 'color-picker-root-' + this.componentId },
        _react2.default.createElement(_DragLayer2.default, {
          radius: radius,
          thickness: thickness,
          hue: hue,
          saturation: saturation,
          value: value,
          componentId: this.componentId
        }),
        _react2.default.createElement(_HueDragSource2.default, {
          onHueChange: function onHueChange(hue) {
            return _this2.setState({ hue: hue });
          },
          radius: radius,
          thickness: thickness,
          componentId: this.componentId
        }),
        _react2.default.createElement(_SaturationValueDragSource2.default, {
          hue: hue,
          onSaturationChange: function onSaturationChange(saturation) {
            return _this2.setState({ saturation: saturation });
          },
          onValueChange: function onValueChange(value) {
            return _this2.setState({ value: value });
          },
          radius: radius,
          thickness: thickness,
          componentId: this.componentId
        })
      );
    }
  }]);

  return ColorWheel;
}(_react2.default.PureComponent);

exports.default = (0, _reactDnd.DragDropContext)(_reactDndHtml5Backend2.default)(ColorWheel);
;